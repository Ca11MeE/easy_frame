<mapper namespace="org.pisces.customer.mapper.MerchantMoneyMapper">

	<!-- 写入用户存水信息 -->
	<insert id="save" parameterType="data" keyProperty="id">
		INSERT INTO
		agy_merchant_money (
		id,
		member_id,
		type,
		source,
		before_money,
		money,
		after_money,
		order_id,
		notes,
		create_time,
		mqkey
		)VALUES (
		#{id},
		#{member_id},
		#{type},
		#{source},
		#{before_money},
		#{money},
		#{after_money},
		#{order_id},
		#{notes},
		#{create_time},
		#{mqkey}
		)
	</insert>

	<!-- 查询用户信息是否已经执行 -->
	<select id="findByMqKey" parameterType="data" resultType="data">
		SELECT
		*
		FROM
		agy_merchant_money
		WHERE
		mqkey = #{mqkey}
		<if test="null != member_id and '' != member_id ">
			AND
			member_id = #{member_id}
		</if>
		<if test="null != type and '' != type ">
			AND
			type = #{type}
		</if>

	</select>

	<!-- 查询用户的余额明细 -->
	<select id="findByMemberId" parameterType="data" resultType="data">
		SELECT
		*
		FROM
		agy_merchant_money
		WHERE
		member_id = #{member_id}
		AND
		type IN
		('INCOME', 'SPENDING')
		<if test=" null != source and '' != source ">
			AND
			source = #{source}
		</if>
		<if test=" null != create_time and '' != create_time">
			AND
			<![CDATA[  DATE_FORMAT(create_time, '%Y-%m') = DATE_FORMAT(#{create_time}, '%Y-%m')    ]]>
		</if>
		ORDER BY create_time DESC
	</select>


	<!-- 根据编号查询今日收益 -->
	<select id="findTodayProfitByMemberId" parameterType="data"
		resultType="data">
		SELECT
		money
		FROM
		agy_merchant_money
		WHERE
		member_id = #{member_id}
		AND
		source =
		'INTPROFIT'
		AND
			<![CDATA[  DATE_FORMAT(create_time, '%Y-%m-%d') = DATE_FORMAT(#{create_time}, '%Y-%m-%d')    ]]>
	</select>

	<!-- 根据编号查询累计金额 -->
	<select id="findSumByMemberId" parameterType="data" resultType="data">
		SELECT
		SUM(money) as money
		FROM
		agy_merchant_money
		WHERE
		member_id =
		#{member_id}
		<if test=" null != type and '' != type ">
			AND
			type = #{type}
		</if>
		<if test=" null != source and '' != source ">
			AND
			source = #{source}
		</if>
		<if test=" null != create_time and '' != create_time">
			AND
			<![CDATA[  DATE_FORMAT(create_time, '%Y-%m') = DATE_FORMAT(#{create_time}, '%Y-%m')    ]]>
		</if>
	</select>

	<!-- 更新数量 -->
	<update id="updateWaterNumber" parameterType="data">
		UPDATE
		mw_member_water
		SET
		number = #{number},
		update_time = #{update_time}
		WHERE
		id = #{id}
	</update>


	<!-- 导出用户余额来源明细 -->
	<select id="exportMemberMoneyDetail" parameterType="data"
		resultType="data">
		SELECT
		mm.account AS 用户账号,
		CASE mmm.type
		WHEN 'INCOME' THEN
		'收入'
		WHEN
		'SPENDING' THEN
		'支出'
		END AS 资金类型,
		CASE mmm.source
		WHEN 'WITHDRAW' THEN
		'提现'
		WHEN 'ORDERSETT' THEN
		'订单结算'
		WHEN 'COMMISSION' THEN
		'佣金'
		WHEN
		'GOODSSETT' THEN
		'商品结算'
		WHEN 'GOODSREFUNDS' THEN
		'商品退款'
		WHEN 'QUICKORDER'
		THEN
		'快捷订单'
		WHEN 'INTPROFIT' THEN
		'分红收益'
		WHEN 'WITHDRAWFAIL' THEN
		'提现失败'
		WHEN 'BALANCEPAY' THEN
		'余额支付'
		ELSE
		'其他'
		END AS 资金渠道,
		mmm.money / 100 AS
		操作金额,
		mmm.notes AS 备注,
		mmm.create_time AS 创建时间
		FROM
		agy_merchant_money mmm
		LEFT JOIN mw_member mm ON mmm.member_id = mm.id
		WHERE
		mmm.type IN
		('INCOME', 'SPENDING')
		<if test=" null != account and '' != account ">
			AND
			mm.account = #{account}
		</if>
		ORDER BY
		mmm.create_time DESC
	</select>

	<!-- 查询用户资金明细 -->
	<select id="findMemberCashDeatil" parameterType="data"
		resultType="data">
		SELECT
		*
		FROM
		agy_merchant_money
		WHERE
		member_id = #{member_id}
		<if test=" null != type and '' != type ">
			AND
			type = #{type}
		</if>
		<if test=" null != source and '' != source ">
			AND
			source = #{source}
		</if>
		ORDER BY
		create_time DESC
	</select>

	<!-- 查询保证金明细 -->
	<select id='findMemberBondDetail' parameterType='data'
		resultType='data'>
		SELECT
		*
		FROM
		agy_merchant_money
		WHERE
		member_id = #{member_id}
		AND
		type IN
		('CONSUMEBOND','FREEZEBOND')
		<if test=" null != source and '' != source ">
			AND
			source =#{source}
		</if>
		ORDER BY
		create_time DESC
	</select>

	<!--查询商户冻结明细-->
	<select id="findFreezeDetails" resultType="data">
		select
		*
		from
		agy_merchant_money
		where
		type = 'FREEZE'
		and
		member_id=#{member_id}
        ORDER BY create_time DESC
	</select>


	<!--临时用-->
	<select id="findAll" resultType="data">
		select * from agy_merchant_money
        ORDER BY create_time DESC
	</select>

	<update id="updateNodes" parameterType="data">
		update
		agy_merchant_money
		set
		notes=#{notes}
		where
		id=#{id}
	</update>
</mapper>